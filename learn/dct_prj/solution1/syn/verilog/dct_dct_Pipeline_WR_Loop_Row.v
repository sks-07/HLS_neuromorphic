// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_dct_Pipeline_WR_Loop_Row (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln87,
        buf_2d_out_address0,
        buf_2d_out_ce0,
        buf_2d_out_q0,
        buf_2d_out_address1,
        buf_2d_out_ce1,
        buf_2d_out_q1,
        buf_2d_out_address2,
        buf_2d_out_ce2,
        buf_2d_out_q2,
        buf_2d_out_address3,
        buf_2d_out_ce3,
        buf_2d_out_q3,
        buf_2d_out_address4,
        buf_2d_out_ce4,
        buf_2d_out_q4,
        buf_2d_out_address5,
        buf_2d_out_ce5,
        buf_2d_out_q5,
        buf_2d_out_address6,
        buf_2d_out_ce6,
        buf_2d_out_q6,
        buf_2d_out_address7,
        buf_2d_out_ce7,
        buf_2d_out_q7
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln87;
output  [5:0] buf_2d_out_address0;
output   buf_2d_out_ce0;
input  [15:0] buf_2d_out_q0;
output  [5:0] buf_2d_out_address1;
output   buf_2d_out_ce1;
input  [15:0] buf_2d_out_q1;
output  [5:0] buf_2d_out_address2;
output   buf_2d_out_ce2;
input  [15:0] buf_2d_out_q2;
output  [5:0] buf_2d_out_address3;
output   buf_2d_out_ce3;
input  [15:0] buf_2d_out_q3;
output  [5:0] buf_2d_out_address4;
output   buf_2d_out_ce4;
input  [15:0] buf_2d_out_q4;
output  [5:0] buf_2d_out_address5;
output   buf_2d_out_ce5;
input  [15:0] buf_2d_out_q5;
output  [5:0] buf_2d_out_address6;
output   buf_2d_out_ce6;
input  [15:0] buf_2d_out_q6;
output  [5:0] buf_2d_out_address7;
output   buf_2d_out_ce7;
input  [15:0] buf_2d_out_q7;

reg ap_idle;
reg m_axi_gmem_WVALID;
reg buf_2d_out_ce0;
reg buf_2d_out_ce1;
reg buf_2d_out_ce2;
reg buf_2d_out_ce3;
reg buf_2d_out_ce4;
reg buf_2d_out_ce5;
reg buf_2d_out_ce6;
reg buf_2d_out_ce7;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln87_1_reg_469;
reg   [0:0] icmp_ln87_1_reg_469_pp0_iter1_reg;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln87_fu_226_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln87_reg_425;
wire   [0:0] icmp_ln87_1_fu_332_p2;
reg   [15:0] buf_2d_out_load_reg_479;
reg   [15:0] buf_2d_out_load_1_reg_485;
reg   [15:0] buf_2d_out_load_2_reg_491;
reg   [15:0] buf_2d_out_load_3_reg_497;
reg   [15:0] buf_2d_out_load_4_reg_503;
reg   [15:0] buf_2d_out_load_5_reg_509;
reg   [15:0] buf_2d_out_load_6_reg_515;
reg   [15:0] buf_2d_out_load_7_reg_521;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln90_fu_246_p1;
wire   [63:0] zext_ln90_1_fu_257_p1;
wire   [63:0] zext_ln90_2_fu_268_p1;
wire   [63:0] zext_ln90_3_fu_279_p1;
wire   [63:0] zext_ln90_4_fu_290_p1;
wire   [63:0] zext_ln90_5_fu_301_p1;
wire   [63:0] zext_ln90_6_fu_312_p1;
wire   [63:0] zext_ln90_7_fu_323_p1;
wire    ap_block_pp0_stage0_01001;
reg   [383:0] phi_ln87_fu_86;
wire   [383:0] select_ln87_fu_393_p3;
wire    ap_loop_init;
reg   [3:0] r_fu_90;
wire   [3:0] add_ln87_fu_232_p2;
reg   [3:0] ap_sig_allocacmp_r_1;
wire   [2:0] empty_fu_222_p1;
wire   [5:0] tmp_s_fu_238_p3;
wire   [5:0] or_ln90_fu_251_p2;
wire   [5:0] or_ln90_1_fu_262_p2;
wire   [5:0] or_ln90_2_fu_273_p2;
wire   [5:0] or_ln90_3_fu_284_p2;
wire   [5:0] or_ln90_4_fu_295_p2;
wire   [5:0] or_ln90_5_fu_306_p2;
wire   [5:0] or_ln90_6_fu_317_p2;
wire   [1:0] empty_28_fu_328_p1;
wire   [255:0] tmp_2_fu_369_p4;
wire   [383:0] tmp_3_fu_379_p10;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dct_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_ln87_fu_86 <= 384'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_ln87_fu_86 <= select_ln87_fu_393_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln87_fu_226_p2 == 1'd0))) begin
            r_fu_90 <= add_ln87_fu_232_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            r_fu_90 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln87_1_reg_469_pp0_iter1_reg <= icmp_ln87_1_reg_469;
        icmp_ln87_reg_425 <= icmp_ln87_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_reg_425 == 1'd0))) begin
        buf_2d_out_load_1_reg_485 <= buf_2d_out_q6;
        buf_2d_out_load_2_reg_491 <= buf_2d_out_q5;
        buf_2d_out_load_3_reg_497 <= buf_2d_out_q4;
        buf_2d_out_load_4_reg_503 <= buf_2d_out_q3;
        buf_2d_out_load_5_reg_509 <= buf_2d_out_q2;
        buf_2d_out_load_6_reg_515 <= buf_2d_out_q1;
        buf_2d_out_load_7_reg_521 <= buf_2d_out_q0;
        buf_2d_out_load_reg_479 <= buf_2d_out_q7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_226_p2 == 1'd0))) begin
        icmp_ln87_1_reg_469 <= icmp_ln87_1_fu_332_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_226_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_reg_425 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_r_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_r_1 = r_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce0 = 1'b1;
    end else begin
        buf_2d_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce1 = 1'b1;
    end else begin
        buf_2d_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce2 = 1'b1;
    end else begin
        buf_2d_out_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce3 = 1'b1;
    end else begin
        buf_2d_out_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce4 = 1'b1;
    end else begin
        buf_2d_out_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce5 = 1'b1;
    end else begin
        buf_2d_out_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce6 = 1'b1;
    end else begin
        buf_2d_out_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_out_ce7 = 1'b1;
    end else begin
        buf_2d_out_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln87_1_reg_469_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln87_1_reg_469_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln87_fu_232_p2 = (ap_sig_allocacmp_r_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln87_1_reg_469_pp0_iter1_reg == 1'd1) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign buf_2d_out_address0 = zext_ln90_7_fu_323_p1;

assign buf_2d_out_address1 = zext_ln90_6_fu_312_p1;

assign buf_2d_out_address2 = zext_ln90_5_fu_301_p1;

assign buf_2d_out_address3 = zext_ln90_4_fu_290_p1;

assign buf_2d_out_address4 = zext_ln90_3_fu_279_p1;

assign buf_2d_out_address5 = zext_ln90_2_fu_268_p1;

assign buf_2d_out_address6 = zext_ln90_1_fu_257_p1;

assign buf_2d_out_address7 = zext_ln90_fu_246_p1;

assign empty_28_fu_328_p1 = ap_sig_allocacmp_r_1[1:0];

assign empty_fu_222_p1 = ap_sig_allocacmp_r_1[2:0];

assign icmp_ln87_1_fu_332_p2 = ((empty_28_fu_328_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_226_p2 = ((ap_sig_allocacmp_r_1 == 4'd8) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = {{{{{{{{{buf_2d_out_load_7_reg_521}, {buf_2d_out_load_6_reg_515}}, {buf_2d_out_load_5_reg_509}}, {buf_2d_out_load_4_reg_503}}, {buf_2d_out_load_3_reg_497}}, {buf_2d_out_load_2_reg_491}}, {buf_2d_out_load_1_reg_485}}, {buf_2d_out_load_reg_479}}, {phi_ln87_fu_86}};

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign or_ln90_1_fu_262_p2 = (tmp_s_fu_238_p3 | 6'd2);

assign or_ln90_2_fu_273_p2 = (tmp_s_fu_238_p3 | 6'd3);

assign or_ln90_3_fu_284_p2 = (tmp_s_fu_238_p3 | 6'd4);

assign or_ln90_4_fu_295_p2 = (tmp_s_fu_238_p3 | 6'd5);

assign or_ln90_5_fu_306_p2 = (tmp_s_fu_238_p3 | 6'd6);

assign or_ln90_6_fu_317_p2 = (tmp_s_fu_238_p3 | 6'd7);

assign or_ln90_fu_251_p2 = (tmp_s_fu_238_p3 | 6'd1);

assign select_ln87_fu_393_p3 = ((icmp_ln87_1_reg_469_pp0_iter1_reg[0:0] == 1'b1) ? 384'd0 : tmp_3_fu_379_p10);

assign tmp_2_fu_369_p4 = {{phi_ln87_fu_86[383:128]}};

assign tmp_3_fu_379_p10 = {{{{{{{{{buf_2d_out_load_7_reg_521}, {buf_2d_out_load_6_reg_515}}, {buf_2d_out_load_5_reg_509}}, {buf_2d_out_load_4_reg_503}}, {buf_2d_out_load_3_reg_497}}, {buf_2d_out_load_2_reg_491}}, {buf_2d_out_load_1_reg_485}}, {buf_2d_out_load_reg_479}}, {tmp_2_fu_369_p4}};

assign tmp_s_fu_238_p3 = {{empty_fu_222_p1}, {3'd0}};

assign zext_ln90_1_fu_257_p1 = or_ln90_fu_251_p2;

assign zext_ln90_2_fu_268_p1 = or_ln90_1_fu_262_p2;

assign zext_ln90_3_fu_279_p1 = or_ln90_2_fu_273_p2;

assign zext_ln90_4_fu_290_p1 = or_ln90_3_fu_284_p2;

assign zext_ln90_5_fu_301_p1 = or_ln90_4_fu_295_p2;

assign zext_ln90_6_fu_312_p1 = or_ln90_5_fu_306_p2;

assign zext_ln90_7_fu_323_p1 = or_ln90_6_fu_317_p2;

assign zext_ln90_fu_246_p1 = tmp_s_fu_238_p3;

endmodule //dct_dct_Pipeline_WR_Loop_Row
